{
 "persistence": {
  /* There are 3 modes to use DORM: development, test, release. You have to configure each of them. */
  "development": {
	 
	 /* PERSISTENCE ADAPTER SECTION ********************************************************************************************/
	  /* Copy one of these "database_adapter" class name to enable one of the following persistence adapter acording with your needs 
   
	   Firebird persistence adapter based on Unified Interbase (included in DORM) 
     "database_adapter": "dorm.adapter.UIB.Firebird.TUIBFirebirdPersistStrategy",
	 
	   Interbase persistence adapter based on Unified Interbase (included in DORM) 
     "database_adapter": "dorm.adapter.UIB.Interbase.TUIBInterbasePersistStrategy",

	   sqlite3 persistence adapter based on http://www.ararat.cz/doku.php/en:sqlitewrap (included in DORM)
     "database_adapter": "dorm.adapter.Sqlite3.TSqlite3PersistStrategy",	 
	*/
	
	/* Default is for a Firebird database. Copy the right one for your needs from the persistence adapters listed above */
  "database_adapter": "dorm.adapter.UIB.Firebird.TUIBFirebirdPersistStrategy",	
	
  /* CONNECTION STRING SECTION ************************************************************************************************/
	  /* Write your own connection sctring according with your database 
		
	   Example of a Firebird connection string
     "database_connection_string": "localhost:C:\\DEV\\MyCoolApp\\MyDatabase.fdb",		 
		 
	   Example of a Interbase connection string
     "database_connection_string": "localhost:C:\\DEV\\MyCoolApp\\MyDatabase.ib",		 
		 		 
		 Example of a sqlite3 connection string
		 "database_connection_string":"..\\database\\mydatabase.s3db",   
	*/

	/* Default is for the employee Firebird database using an alias. */
  "database_connection_string": "localhost:D:\\DEV\\dorm\\samples\\DelphiXE3\\TdormSession_Sample01\\SAMPLEDATA.FDB",

  /* Currently only "integer" is supported */
   "key_type": "integer",
	 
  /* Usually you should not change this */ 
   "null_key_value": "0",
	 
	/* The keys generator is in charge to generate the primary keys used by DORM on SQL INSERT. You can implement whatever algorithm you need. Currently
     there are keys generator only for interbase and firebird because sqlite3 doesn't have the generators nor the sequences.
	
	The following keys generators are currently available
	
	Firebird with integer generator named like the following: 'SEQ_<entity_name>_ID'  
	"keys_generator": "dorm.adapter.UIB.Firebird.TUIBFirebirdTableSequence",

	Firebird with integer generator named like the following: 'GEN_<entity_name>_ID'  
	"keys_generator": "dorm.adapter.UIB.Firebird.TUIBFirebirdTableGenerator",

	Interbase with integer generator named like the following: 'SEQ_<entity_name>_ID'  
	"keys_generator": "dorm.adapter.UIB.Interbase.TUIBInterbaseTableSequence",
	
	*/
	
  "keys_generator": "dorm.adapter.UIB.Firebird.TUIBFirebirdTableGenerator",

   /* The "logger" is in charge to log every DORM operation. There are number of loggers.
	 
	 File CodeSite logger	 
	 "logger_class_name": "dorm.loggers.CodeSite.TCodeSiteFileLog"
	 
	 Live CodeSite logger
	 "logger_class_name": "dorm.loggers.CodeSite.TCodeSiteLiveLog"
	 
	 File logger  (do not use if hi-performance are required in production!!!)
	 "logger_class_name": "dorm.loggers.FileLog.TdormFileLog"
	 
	 Smart Inspect
	 "logger_class_name": "dorm.loggers.SmartInspect.TdormSILog"
	 
	 The default is a Live CodeSite viewer for development and a File CodeSite logger for release and test
	 */

	 "logger_class_name": "dorm.loggers.CodeSite.TCodeSiteLiveLog",
	 
	 
	 /* The persistence adapter could needs other informations apart the default one. 
	 Any additional informations need to be configured in this file. Currently, only firebird and interbase needs these additional informations
	 for username and password. So this is the default. Other persistence adapters simply can ingore this informations (e.g. SQLite3)
	 */
	 "username": "sysdba",
	 "password":"masterkey"		 
  },
  "release": {
   "database_adapter": "Select DatabaseAdapter",
   "database_connection_string": "Set DatabaseConnectionString",
   "key_type": "Set KeyType",
   "null_key_value": "Set NullKeyValue",
   "keys_generator": "Select KeysGenerator"
  },
  "test": {
   "database_adapter": "Select DatabaseAdapter",
   "database_connection_string": "Set DatabaseConnectionString",
   "key_type": "Set KeyType",
   "null_key_value": "Set NullKeyValue",
   "keys_generator": "Select KeysGenerator"
  }
 }
}